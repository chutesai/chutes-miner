# {{- define "redis.url" -}}
# redis://:$(REDIS_PASSWORD)@redis:6379
# {{- end }}

# {{- define "postgresql.url" -}}
# postgresql+asyncpg://{{ .Values.postgres.database.user }}:$(POSTGRES_PASSWORD)@postgres:5432/{{ .Values.postgres.database.name }}
# {{- end }}


apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    {{- include "api.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "api.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.labels" . | nindent 8 }}
    spec:
      serviceAccountName: api
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api
          image: "{{ .Values.api.image }}"
          imagePullPolicy: {{ .Values.api.imagePullPolicy }}
          command: ["python", "-m", "uvicorn", "--host", "0.0.0.0", "--port", "8000", "chutes_agent.api.main:app"]
          env:
            - name: MINER_SS58
              valueFrom:
                secretKeyRef:
                  name: miner-credentials
                  key: ss58
            - name: MINER_SEED
              valueFrom:
                secretKeyRef:
                  name: miner-credentials
                  key: seed
            - name: VALIDATORS
              value: {{ .Values.validators | toJson | quote }}
            - name: CLUSTER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
{{- define "redis.url" -}}
redis://:$(REDIS_PASSWORD)@redis:6379
{{- end }}

{{- define "postgresql.url" -}}
postgresql+asyncpg://{{ .Values.postgres.database.user }}:$(POSTGRES_PASSWORD)@postgres:5432/{{ .Values.postgres.database.name }}
{{- end }}


apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    {{- include "minerApi.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "minerApi.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "minerApi.labels" . | nindent 8 }}
    spec:
      serviceAccountName: chutes
      {{- with .Values.minerApi.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minerApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minerApi.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if .Values.multiCluster }}
      initContainers:
        - name: get-node-ip
          image: bitnamilegacy/kubectl:latest
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - sh
            - -c
            - |
              NODE_IP=$(kubectl get node ${NODE_NAME} -o jsonpath='{.metadata.labels.chutes/external-ip}')
              cat > /shared/env.sh << EOF
              export NODE_IP="${NODE_IP}"
              export MONITOR_API="http://${NODE_IP}:32001"
              EOF
          volumeMounts:
            - name: shared-data
              mountPath: /shared
      {{- end }}
      containers:
        - name: api
          image: "{{ .Values.minerApi.image }}"
          imagePullPolicy: {{ .Values.minerApi.imagePullPolicy }}
          {{ if .Values.multiCluster }}
          command:
            - sh
            - -c
            - |
              . /shared/env.sh
              exec python -m uvicorn --host 0.0.0.0 --port {{ .Values.minerApi.service.targetPort }} --workers 4 chutes_miner.api.main:app
          {{- else }}
          command: ["python", "-m", "uvicorn", "--host", "0.0.0.0", "--port", "{{ .Values.minerApi.service.targetPort }}", "--workers", "4", "chutes_miner.api.main:app"]
          {{- end }}
          env:
            - name: MINER_SS58
              valueFrom:
                secretKeyRef:
                  name: miner-credentials
                  key: ss58
            - name: MINER_SEED
              valueFrom:
                secretKeyRef:
                  name: miner-credentials
                  key: seed
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: {{ .Values.redis.password.passwordKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: {{ .Values.postgres.database.passwordKey }}
            - name: POSTGRESQL
              value: {{ include "postgresql.url" . }}
            - name: REDIS_URL
              value: {{ include "redis.url" . }}
            - name: VALIDATORS
              value: {{ .Values.validators | toJson | quote }}
            - name: REGISTRY_PROXY_PORT
              value: "{{ .Values.registry.service.nodePort }}"
            {{ if not .Values.multiCluster }}
            - name: NVIDIA_RUNTIME
              value: nvidia-container-runtime
            {{ else }}
            - name: MONITORING_NAMESPACE
              value: "monitoring"
            {{- end }}
          {{ if .Values.multiCluster }}
          volumeMounts:
            - name: shared-data
              mountPath: /shared
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.minerApi.service.targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.minerApi.resources | nindent 12 }}
      {{ if .Values.multiCluster }}
      volumes:
        - name: shared-data
          emptyDir: {}
      {{- end }}
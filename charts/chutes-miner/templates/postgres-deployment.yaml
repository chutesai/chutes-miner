apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
  {{- with .Values.postgres.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "postgres.labels" . | nindent 8 }}
    spec:
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgres.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image }}"
          imagePullPolicy: {{ .Values.postgres.imagePullPolicy }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database.name }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.database.user }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: {{ .Values.postgres.database.passwordKey }}
          ports:
            - name: postgres
              containerPort: {{ .Values.postgres.service.targetPort }}
              protocol: TCP
          {{- if .Values.postgres.persistence.enabled }}
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
      {{- if .Values.postgres.persistence.enabled }}
      volumes:
        - name: postgres-data
          hostPath:
            path: /var/snap/postgres-data
            type: DirectoryOrCreate
      {{- end }}

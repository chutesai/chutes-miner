# Set this value to true if oeprating a mutli cluster k3s environment
multiCluster: true

calico: true

cache:
  max_age_days: 30
  max_size_gb: 500
  overrides:
# Add any per-node cache size (in GB) overrides here, e.g.:
#    chutes-miner-gpu-0: 1000
#    chutes-miner-gpu-1: 1500

kubeconfig:
  hostPath: '/home/ubuntu/.kube/config'
  localPath: /tmp/kube/config

validators:
  defaultRegistry: registry.chutes.ai
  defaultApi: https://api.chutes.ai
  supported:
    - hotkey: 5Dt7HZ7Zpw4DppPxFM7Ke3Cm7sDAWhsZXmM5ZAmE7dSVJbcQ
      registry: registry.chutes.ai
      api: https://api.chutes.ai
      socket: wss://ws.chutes.ai

minerApi:
  image: parachutes/miner:k3s-latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "250m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
  service:
    type: NodePort
    nodePort: 32000
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  tolerations: []


gepetto:
  image: parachutes/miner:k3s-latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "500m"
      memory: "2Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  tolerations: []

postgres:
  image: postgres:16
  imagePullPolicy: IfNotPresent
  persistence:
    enabled: true
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
  database:
    name: chutes
    user: chutes
    passwordKey: "postgres-password"
  service:
    type: ClusterIP
    port: 5432
    targetPort: 5432
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - chutes-miner-cpu-0
  tolerations: []

redis:
  image: redis:7
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nvidia.com/gpu.present
            operator: NotIn
            values: ["true"]
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: ClusterIP
    port: 6379
  password:
    passwordKey: "redis-password"
  config:
    customArgs: []

registry:
  service:
    # BE SURE THIS MATCHES registry_port IN ANSIBLE!
    nodePort: 30500

auditExporter:
  image: parachutes/miner:k3s-latest
  nodeSelector:
    kubernetes.io/hostname: chutes-miner-cpu-0

monitor:
  image: parachutes/chutes-monitor:k3s-latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "250m"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
  service:
    type: NodePort
    nodePort: 32001
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity: {}

# Miner credentials - These are provided via Ansible deployment
# These values are automatically injected during deployment and should not be set manually
# as they are sensitive values
minerCredentials:
  # SS58 address for the miner - provided by Ansible from hotkey file
  ss58Address: "REPLACE_WITH_ANSIBLE_SS58_ADDRESS"
  # Secret seed for the miner (hex prefix removed) - provided by Ansible from hotkey file  
  secretSeed: "REPLACE_WITH_ANSIBLE_SECRET_SEED"
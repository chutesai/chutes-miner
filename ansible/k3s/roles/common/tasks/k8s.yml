---
- name: Install python3-kubernetes package
  ansible.builtin.apt:
    name: python3-kubernetes
    state: present

- name: Check if containerd config file exists
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: containerd_config_file

- name: Ensure containerd disabled_plugins is properly configured
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: "^\\s*disabled_plugins\\s*="
    line: "disabled_plugins = []"
    backrefs: true
  register: containerd_config
  notify: Restart containerd
  when: containerd_config_file.stat.exists

# - name: Setup KTX
#   when: inventory_hostname in groups['control']
#   block:
#     - name: Get KTX script
#       ansible.builtin.get_url:
#         url: https://raw.githubusercontent.com/blendle/kns/master/bin/ktx
#         dest: /usr/local/bin/ktx
#         mode: "0755"
#         timeout: 60
#       register: ktx_download
#       retries: 5
#       delay: 30
#       until: ktx_download is not failed or ('status' in ktx_download and ktx_download.status != 429)
#       become: true

#   rescue:
#     - name: Handle GitHub rate limit
#       ansible.builtin.debug:
#         msg: "Hit GitHub rate limit (429). Waiting before retry..."
#       when: ktx_download is defined and ('status' in ktx_download and ktx_download.status == 429)

#     - name: Wait for rate limit reset
#       ansible.builtin.pause:
#         seconds: 60
#       when: ktx_download is defined and ('status' in ktx_download and ktx_download.status == 429)

#     - name: Retry KTX download after rate limit
#       ansible.builtin.get_url:
#         url: https://raw.githubusercontent.com/blendle/kns/master/bin/ktx
#         dest: /usr/local/bin/ktx
#         mode: "0755"
#         timeout: 60
#       become: true
#       when: ktx_download is defined and ('status' in ktx_download and ktx_download.status == 429)

- name: Setup KNS
  block:
    - name: Get KNS script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/blendle/kns/master/bin/kns
        dest: /usr/local/bin/kns
        mode: "0755"
        timeout: 60
      register: kns_download
      retries: 5
      delay: 30
      until: kns_download is not failed or ('status' in kns_download and kns_download.status != 429)
      become: true

  rescue:
    - name: Handle GitHub rate limit
      ansible.builtin.debug:
        msg: "Hit GitHub rate limit (429). Waiting before retry..."
      when: kns_download is defined and ('status' in kns_download and kns_download.status == 429)

    - name: Wait for rate limit reset
      ansible.builtin.pause:
        seconds: 60
      when: kns_download is defined and ('status' in kns_download and kns_download.status == 429)

    - name: Retry KNS download after rate limit
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/blendle/kns/master/bin/kns
        dest: /usr/local/bin/kns
        mode: "0755"
        timeout: 60
      become: true
      when: kns_download is defined and ('status' in kns_download and kns_download.status == 429)

- name: Ensure fzf is installed (required dependency for kns/ktx)
  ansible.builtin.package:
    name: fzf
    state: present
  become: true

- name: Setup aliases
  tags: k8s-tools
  block:
    - name: Setup aliases for ansible user (bash)
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.bashrc"
        line: "alias k='k3s kubectl'"
        state: present
      register: bash_aliases
      become: true
      become_user: "{{ ansible_user }}"

    - name: Setup aliases for ansible user (zsh)
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user }}/.zshrc"
        line: "alias k='k3s kubectl'"
        state: present
      register: zsh_user_result
      failed_when:
        - zsh_user_result.failed is defined and zsh_user_result.failed
        - not "No such file or directory" in zsh_user_result.msg
      when: ansible_env.SHELL is search('zsh')
      become: true
      become_user: "{{ ansible_user }}"

    - name: Setup aliases for root user (bash)
      ansible.builtin.lineinfile:
        path: /root/.bashrc
        line: "alias k='k3s kubectl'"
        state: present

    - name: Setup aliases for root user (zsh)
      ansible.builtin.lineinfile:
        path: /root/.zshrc
        line: "alias k='k3s kubectl'"
        state: present
      register: zsh_root_result
      when: ansible_env.SHELL is search('zsh')
      failed_when:
        - zsh_root_result.failed is defined and zsh_root_result.failed
        - not "No such file or directory" in zsh_root_result.msg

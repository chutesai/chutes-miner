---
- name: Setup kubectl on ansible controller
  vars:
    cluster_context: "{{ inventory_hostname }}"
    cluster_kubeconfig: "{{ controller_kubectl_staging_dir }}/{{ inventory_hostname }}"
  when: 
    - inventory_hostname == groups['control'][0]
    - setup_controller_kubeconfig
  block:

    - name: Check whether kubectl is installed on control node
      delegate_to: 127.0.0.1
      become: false
      ansible.builtin.command: kubectl
      register: kubectl_installed
      ignore_errors: true
      changed_when: false

    - name: Setup kubectl
      when: kubectl_installed.rc == 0
      block:
        - name: Verify kubeconfig staging dir exists
          delegate_to: 127.0.0.1
          become: false
          ansible.builtin.file:
            path: "{{ controller_kubectl_staging_dir }}"
            state: directory
            mode: "0750"
          run_once: true

        - name: "Fetch k3s.yaml from {{ inventory_hostname }}"
          ansible.builtin.fetch:
            src: /etc/rancher/k3s/k3s.yaml
            dest: "{{ cluster_kubeconfig }}"
            flat: true

        - name: Change server address in kubeconfig
          ansible.builtin.shell: |
            KUBECONFIG={{ cluster_kubeconfig }} kubectl config set-cluster default --server=https://{{ ansible_host }}:{{ k3s_api_port | default('6443') }}
          delegate_to: localhost
          become: false
          register: csa_result
          changed_when:
            - csa_result.rc == 0

        - name: Change context name in kubeconfig on control node
          ansible.builtin.replace:
            path: "{{ cluster_kubeconfig }}"
            regexp: ": default"
            replace: ": {{ cluster_context }}"
          delegate_to: localhost
          become: false

        - name: Merge k3s configs
          ansible.builtin.shell: |
            TFILE=$(mktemp)
            KUBECONFIG={{ cluster_kubeconfig }}:{{ controller_kubeconfig }} kubectl config view --flatten > ${TFILE}
            mv ${TFILE} {{ controller_kubeconfig }}
          delegate_to: 127.0.0.1
          become: false
          register: mv_result
          changed_when:
            - mv_result.rc == 0

- name: Setup kubectl for ansible user
  when:
    - user_kubectl | default(true)
  vars:
    control_host: "{{ groups['control'][0] }}"
  block:
    - name: Create directory .kube
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        mode: u=rwx,g=rx,o=

    - name: Copy config file to user home directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: true
        owner: "{{ ansible_user }}"
        mode: u=rw,g=,o=

    - name: Change context name in kubeconfig for user
      ansible.builtin.replace:
        path: "/home/{{ ansible_user }}/.kube/config"
        regexp: ": default"
        replace: ": {{ inventory_hostname }}"

    - name: Configure default KUBECONFIG for user
      ansible.builtin.lineinfile:
        path: /home/{{ ansible_user }}/.bashrc
        regexp: export KUBECONFIG=~/.kube/config
        line: "export KUBECONFIG=~/.kube/config # Added by k3s-ansible"
        state: present

    - name: Configure kubectl autocomplete
      ansible.builtin.lineinfile:
        path: /home/{{ ansible_user }}/.bashrc
        regexp: \.\s+<\(kubectl completion bash\)
        line: ". <(kubectl completion bash)  # Added by k3s-ansible"

- name: Setup kubectl for user
  when:
    - user_kubectl | default(true)
  vars:
    control_host: "{{ groups['control'][0] }}"
  block:
    - name: Create directory .kube
      ansible.builtin.file:
        path: /home/{{ user }}/.kube
        state: directory
        owner: "{{ user }}"
        mode: u=rwx,g=rx,o=

    - name: Copy config file to user home directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/{{ user }}/.kube/config
        remote_src: true
        owner: "{{ user }}"
        mode: u=rw,g=,o=

    - name: Change context name in kubeconfig for user
      ansible.builtin.replace:
        path: "/home/{{ user }}/.kube/config"
        regexp: ": default"
        replace: ": {{ inventory_hostname }}"

    - name: Configure default KUBECONFIG for user
      ansible.builtin.lineinfile:
        path: /home/{{ user }}/.bashrc
        regexp: export KUBECONFIG=~/.kube/config
        line: "export KUBECONFIG=~/.kube/config # Added by k3s-ansible"
        state: present

    - name: Configure kubectl autocomplete
      ansible.builtin.lineinfile:
        path: /home/{{ user }}/.bashrc
        regexp: \.\s+<\(kubectl completion bash\)
        line: ". <(kubectl completion bash)  # Added by k3s-ansible"

- name: Setup kubectl for root
  block:
    - name: Create directory .kube
      ansible.builtin.file:
        path: ~/.kube
        state: directory
        owner: "{{ ansible_user }}"
        mode: u=rwx,g=rx,o=

    - name: Copy config file to user home directory
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        remote_src: true
        mode: u=rw,g=,o=

    - name: Change context name in kubeconfig for root
      ansible.builtin.replace:
        path: "~/.kube/config"
        regexp: ": default"
        replace: ": {{ inventory_hostname }}"

    - name: Configure default KUBECONFIG for root
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        regexp: export KUBECONFIG=~/.kube/config
        line: "export KUBECONFIG=~/.kube/config # Added by k3s-ansible"
        state: present

    - name: Configure kubectl autocomplete
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        regexp: \.\s+<\(kubectl completion bash\)
        line: ". <(kubectl completion bash)  # Added by k3s-ansible"

- name: "Clean up staging directory on Ansible controller"
  ansible.builtin.file:
    path: "{{ controller_kubectl_staging_dir }}"
    state: absent
  delegate_to: localhost
  become: false
  run_once: true

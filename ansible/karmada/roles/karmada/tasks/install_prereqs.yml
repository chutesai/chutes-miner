---
- name: Create temp kubeconfig directory
  ansible.builtin.file:
    path: "{{ karmada_kubeconfig_temp_dir }}"
    state: directory
    mode: "0700"

- name: Check if kubectl-karmada is already installed
  ansible.builtin.command: kubectl-karmada version
  register: kubectl_karmada_result
  ignore_errors: true
  changed_when: false

- name: Install kubectl-karmada
  when: kubectl_karmada_result.rc != 0
  block:

    - name: Get system architecture
      ansible.builtin.command: uname -m
      register: arch_result
      changed_when: false

    - name: Set architecture variable
      ansible.builtin.set_fact:
        karmada_arch: "{{ 'arm64' if 'arm64' in arch_result.stdout or 'aarch64' in arch_result.stdout else 'amd64' }}"

    - name: Download kubectl-karmada
      ansible.builtin.get_url:
        url: https://github.com/karmada-io/karmada/releases/download/{{ karmada_kubectl_version }}/kubectl-karmada-linux-{{ karmada_arch }}.tgz
        dest: /tmp/kubectl-karmada.tgz
        mode: "0644"

    - name: Extract kubectl-karmada
      ansible.builtin.unarchive:
        src: /tmp/kubectl-karmada.tgz
        dest: /tmp
        remote_src: true

    - name: Install kubectl-karmada
      ansible.builtin.copy:
        src: /tmp/kubectl-karmada
        dest: /usr/local/bin/kubectl-karmada
        mode: "0755"
        remote_src: true
      become: true

    - name: Clean up kubectl-karmada installation files
      ansible.builtin.file:
        path: /tmp/kubectl-karmada.tgz
        state: absent
